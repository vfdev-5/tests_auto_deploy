language: python

python:
  - "2.7"
  - "3.5"

stages:
  - Lint check
  - test

before_install: &before_install
  - sudo apt-get update
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a
  - conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION numpy
  - source activate test-environment
  - python setup.py install

install:
  - pip install --upgrade pytest codecov pytest-cov

script:
  - py.test --cov check_auto_deploy --cov-report term-missing

after_success:
  - codecov

before_deploy:
  # Conda deploy if on tag
  # ANACONDA_USER and $ANACONDA_TOKEN should be provided by Travis
  # How to generate ANACONDA_TOKEN: https://docs.anaconda.com/anaconda-cloud/user-guide/tasks/work-with-accounts#creating-access-tokens
  - conda.recipe/deploy

# PyPI Deployment: https://docs.travis-ci.com/user/deployment/pypi/
deploy:

  provider: pypi

  user: $PYPI_USER
  # If password contains non alphanumeric characters
  # https://github.com/travis-ci/dpl/issues/377
  # pass it as secured variable
  password: $PYPI_TOKEN
  # otherwise, follow "How to encrypt the password": https://docs.travis-ci.com/user/encryption-keys/
  # `travis encrypt deploy.password="password"`
  #  secure: "secured_password"

  # For debug purposes -> deploy on test.pypi
  server: https://test.pypi.org/legacy/

  skip_cleanup: true

  distributions: "sdist bdist_wheel"

  on:
    tags: true

    python: "3.5"


jobs:
  include:
    - stage: Lint check
      python: "2.7"
      before_install: # Nothing to do
      install: pip install flake8
      script: flake8
      after_success: # Nothing to do
